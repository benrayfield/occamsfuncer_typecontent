/** Ben F Rayfield offers this software opensource MIT license */
package immutableexceptgas.occamsfuncer.ui;
import static immutableexceptgas.occamsfuncer.util.ImportStatic.*;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;

import javax.swing.JFrame;

/** occamsfuncer Visual OBject (VOB) few standard types.
occamsfuncerGraphics will be a list of vob (visual object). There will be
these kinds of vob, each a map with "type" mapping to these string names of
enum instances. (and other nonvob types may have
similar type names though we should be careful of building spaghetticode this way).
...
FIXME merge texturerectvob and texturetrivob?
FIXME merge voxelsvob, linesvob, and trisvob by adding a howManyCorners var (1-3).
FIXME Of all these shapes, should there be an outline form like in mspaint you can
outline or fill a rectangle or oval?
FIXME need to know precisely how many pixels tall and wide textvob is, and no wrapping.
FIXME should there be rectsvob and ovalsvob which has multiple rects similar to trisvob?
And why do I need rectvob if I can do triangles?'
FIXME am I satisfied with 1 pixel accuracy for [trisvob, linesvob, and voxelsvob],
or would I want scalar position and antialiasing etc?
FIXME merge oval with rect as roundrect?
FIXME expand line to have circles on both ends which can be different sizes?
(to help me answer these questions, look at the simple graphics ops offered in common
frameworks such as java Graphics2D and html canvas, which are how they'll likely
be implemented anyways but still need the occamsfuncer wrappers.
	
	TODO ovalsVob2d
*/
public enum Vob{
	
	/** map with 1 aftrans (3x3) and int[]colorARGB and int width
	(of the int[] as 2d) with 1bitA0Or255. (like bin and una, The int[] may be generated
	by Tensor ops (like bin and una, see incomplete code) or other ways.
	*/
	textureRectVob2d,
	
	/** map with 2 aftranses and int[]colorRGB and int width (of the int[] as 2d),
	1 aftrans to select a triangle in the int[] and the other aftrans to choose
	where on screen to paint that triangle. The int[] may be generated by Tensor
	ops (like bin and una, see incomplete code) or other ways.
	*/
	textureTriVob2d,
	
	/** map with array (int[], long[], or double[]) representing an array of integers,
	where each integer is a voxel, and to tell what kind of voxels the map has these
	vars: int visColorDims (common values will be 1 and 3, vis meaning visible so
	excludes alpha), int bitsPerColorDim (common values will be 4 and 8),
	int bitsAlpha (transparency, common values wille be 0, 1, and 8),
	cancelled(((int bitsPerYOrX (where is the pixel, such as 10 for a square of side 2^10))) int bitsY, int bitsX (such as y11x10 is 2048x1024). Example: x10y10alpha0red4green4blue4 fits in int.
	Example: x10y10alpha8red8green8blue8 fits in double or long.
	Example: x16y16alpha8red8green8blue8 fits in long. ints are significantly faster.
	yes(((should x and y allow different sizes)))
	FIXME should x and y allow nonPowOf2 sizes? Just cuz my resolution fits 1024 square in most of the right side of screen with space for a mindmap column on left outside it doesnt mean other peoples screens fit so well and they'd have to use up to 4 times the memory size in the worst case of just needing 1 extra row and 1 extra column of pixels.
	cancelled(((should a voxel have a size, and is it the same size in x and y?
	Probably not, cuz I dont want to get into default size such as a default size of y4x1,
	but I could default them to size x1y1, but its probably not worth the extra complexity
	since would also want aftrans if had size, unless its a radius size approximatable as
	a square. And then do I want just integer sizes or what about a radius of 1.5? No size!)))
	*/
	voxelsVob2d,
	
	/** similar to voxelsvob except even/odd pairs of the numbers are start and end
	of lines, including gradual color change from one end of line to the other but
	I'm undecided if both need to be same color but I'm leaving that open for future
	expansion into gradual color change.
	*/
	linesVob2d,
	
	/** similar to voxelsvob and linesvob excep used in threes as arrayIndex%3,
	like opengl can draw triangles with each corner being a different color
	and gradually between.
	*/
	trisVob2d,
	
	/** aftrans (3x3) (includes font size), int colorARGB, int[] chars. */
	textVob2d,
	
	/** aftrans (3x3), int colorARGB. */
	rectVob2d,
	
	/** aftrans (3x3), int colorARGB. Is a size 1 circle (radius .5) that can
	become tilted oval by aftrans.
	*/
	ovalVob2d;

}
